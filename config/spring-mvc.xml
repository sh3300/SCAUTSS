<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xsi:schemaLocation="http://www.springframework.org/schema/beans  
  http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
  http://www.springframework.org/schema/context  
  http://www.springframework.org/schema/context/spring-context-3.1.xsd  
  http://www.springframework.org/schema/mvc  
  http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->

	<!-- 静态资源处理 -->
	<mvc:default-servlet-handler />
	<!-- 静态资源处理 -->

	<!-- 注解handler，批量扫描 -->
	<context:component-scan base-package="com.scau.tss.controller" />
	<!-- 注解handler，批量扫描 -->
	
	<!-- 加载注解的Handler适配器和Handler映射器，还另外加载了很多参数绑定方法，比如json转换解析器-->
	<mvc:annotation-driven conversion-service="conversionService" validator="validator" />
	<!-- 加载注解的Handler适配器和Handler映射器 -->
	
	<!-- 视图解析器(解析jsp，默认使用jstl标签） -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- 视图解析器(解析jsp，默认使用jstl标签） -->
  
	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"  
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />  
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />  
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />  
    </bean> 
	<!-- 配置文件上传 -->
    
    <!-- 自定义参数绑定 -->
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<!-- 转换器 -->
		<property name="converters">
			<list>
				<!-- 日期转换 -->
				<bean class="com.scau.tss.controller.converter.DateConverter" />
			</list>
		</property>
	</bean>
	<!-- 自定义参数绑定 -->
	
	<!-- 校验器 -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<!-- hibernate校验器-->
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!-- 指定校验使用的资源文件，在文件中配置校验错误信息，如果不指定则默认使用classpath下的ValidationMessages.properties -->
		<property name="validationMessageSource" ref="messageSource" />
	</bean>
	<!-- 校验器 -->
	
	<!-- 校验错误信息配置文件 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<!-- 资源文件名-->
		<property name="basenames">
       	 <list>
            <value>classpath:CustomValidationMessages</value>
       	 </list>
    	</property>
		<!-- 资源文件编码格式 -->
		<property name="fileEncodings" value="utf-8" />
		<!-- 对资源文件内容缓存时间，单位秒 -->
		<property name="cacheSeconds" value="120" />
	</bean>
	<!-- 校验错误信息配置文件 -->
	
	<!-- 全局异常处理器 -->
	<bean class="com.scau.tss.exception.CustomExceptionResolver" />
	<!-- 全局异常处理器 -->

    <!-- 开启Annotation -->
    <context:annotation-config/>
    <!-- 开启Annotation -->
    
</beans>