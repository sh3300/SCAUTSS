<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.scau.tss.dao.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.scau.tss.entity.Comment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="DATE" />
    <result column="uId" property="uid" jdbcType="INTEGER" />
    <result column="restId" property="restid" jdbcType="INTEGER" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="perPerson" property="perperson" jdbcType="DECIMAL" />
    <result column="deleted" property="deleted" jdbcType="TINYINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.scau.tss.entity.CommentWithBLOBs" extends="BaseResultMap" >
    <result column="comment" property="comment" jdbcType="LONGVARCHAR" />
    <result column="url" property="url" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, time, uId, restId, score, perPerson, deleted
  </sql>
  <sql id="Blob_Column_List" >
    comment, url
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.scau.tss.entity.CommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.scau.tss.entity.CommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.scau.tss.entity.CommentExample" >
    delete from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.scau.tss.entity.CommentWithBLOBs" >
    insert into comment (id, time, uId, restId, 
      score, perPerson, deleted, 
      comment, url)
    values (#{id,jdbcType=INTEGER}, #{time,jdbcType=DATE}, #{uid,jdbcType=INTEGER}, #{restid,jdbcType=INTEGER}, 
      #{score,jdbcType=INTEGER}, #{perperson,jdbcType=DECIMAL}, #{deleted,jdbcType=TINYINT}, 
      #{comment,jdbcType=LONGVARCHAR}, #{url,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.scau.tss.entity.CommentWithBLOBs" >
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="uid != null" >
        uId,
      </if>
      <if test="restid != null" >
        restId,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="perperson != null" >
        perPerson,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="url != null" >
        url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        #{time,jdbcType=DATE},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="restid != null" >
        #{restid,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        #{score,jdbcType=INTEGER},
      </if>
      <if test="perperson != null" >
        #{perperson,jdbcType=DECIMAL},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=TINYINT},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=LONGVARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.scau.tss.entity.CommentExample" resultType="java.lang.Integer" >
    select count(*) from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update comment
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=DATE},
      </if>
      <if test="record.uid != null" >
        uId = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.restid != null" >
        restId = #{record.restid,jdbcType=INTEGER},
      </if>
      <if test="record.score != null" >
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.perperson != null" >
        perPerson = #{record.perperson,jdbcType=DECIMAL},
      </if>
      <if test="record.deleted != null" >
        deleted = #{record.deleted,jdbcType=TINYINT},
      </if>
      <if test="record.comment != null" >
        comment = #{record.comment,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.url != null" >
        url = #{record.url,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update comment
    set id = #{record.id,jdbcType=INTEGER},
      time = #{record.time,jdbcType=DATE},
      uId = #{record.uid,jdbcType=INTEGER},
      restId = #{record.restid,jdbcType=INTEGER},
      score = #{record.score,jdbcType=INTEGER},
      perPerson = #{record.perperson,jdbcType=DECIMAL},
      deleted = #{record.deleted,jdbcType=TINYINT},
      comment = #{record.comment,jdbcType=LONGVARCHAR},
      url = #{record.url,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update comment
    set id = #{record.id,jdbcType=INTEGER},
      time = #{record.time,jdbcType=DATE},
      uId = #{record.uid,jdbcType=INTEGER},
      restId = #{record.restid,jdbcType=INTEGER},
      score = #{record.score,jdbcType=INTEGER},
      perPerson = #{record.perperson,jdbcType=DECIMAL},
      deleted = #{record.deleted,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.scau.tss.entity.CommentWithBLOBs" >
    update comment
    <set >
      <if test="time != null" >
        time = #{time,jdbcType=DATE},
      </if>
      <if test="uid != null" >
        uId = #{uid,jdbcType=INTEGER},
      </if>
      <if test="restid != null" >
        restId = #{restid,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="perperson != null" >
        perPerson = #{perperson,jdbcType=DECIMAL},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=TINYINT},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=LONGVARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.scau.tss.entity.CommentWithBLOBs" >
    update comment
    set time = #{time,jdbcType=DATE},
      uId = #{uid,jdbcType=INTEGER},
      restId = #{restid,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER},
      perPerson = #{perperson,jdbcType=DECIMAL},
      deleted = #{deleted,jdbcType=TINYINT},
      comment = #{comment,jdbcType=LONGVARCHAR},
      url = #{url,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.scau.tss.entity.Comment" >
    update comment
    set time = #{time,jdbcType=DATE},
      uId = #{uid,jdbcType=INTEGER},
      restId = #{restid,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER},
      perPerson = #{perperson,jdbcType=DECIMAL},
      deleted = #{deleted,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>