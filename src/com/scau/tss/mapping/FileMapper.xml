<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.scau.tss.dao.FileMapper" >
  <resultMap id="BaseResultMap" type="com.scau.tss.entity.File" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="times" property="times" jdbcType="DATE" />
    <result column="files_type" property="filesType" jdbcType="VARCHAR" />
    <result column="deleted" property="deleted" jdbcType="TINYINT" />
    <result column="complaint_id" property="complaintId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, url, times, files_type, deleted, complaint_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.scau.tss.entity.FileExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from files
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from files
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from files
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.scau.tss.entity.FileExample" >
    delete from files
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.scau.tss.entity.File" >
    insert into files (id, url, times, 
      files_type, deleted, complaint_id
      )
    values (#{id,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{times,jdbcType=DATE}, 
      #{filesType,jdbcType=VARCHAR}, #{deleted,jdbcType=TINYINT}, #{complaintId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.scau.tss.entity.File" >
    insert into files
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="times != null" >
        times,
      </if>
      <if test="filesType != null" >
        files_type,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
      <if test="complaintId != null" >
        complaint_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="times != null" >
        #{times,jdbcType=DATE},
      </if>
      <if test="filesType != null" >
        #{filesType,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=TINYINT},
      </if>
      <if test="complaintId != null" >
        #{complaintId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.scau.tss.entity.FileExample" resultType="java.lang.Integer" >
    select count(*) from files
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update files
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.url != null" >
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.times != null" >
        times = #{record.times,jdbcType=DATE},
      </if>
      <if test="record.filesType != null" >
        files_type = #{record.filesType,jdbcType=VARCHAR},
      </if>
      <if test="record.deleted != null" >
        deleted = #{record.deleted,jdbcType=TINYINT},
      </if>
      <if test="record.complaintId != null" >
        complaint_id = #{record.complaintId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update files
    set id = #{record.id,jdbcType=INTEGER},
      url = #{record.url,jdbcType=VARCHAR},
      times = #{record.times,jdbcType=DATE},
      files_type = #{record.filesType,jdbcType=VARCHAR},
      deleted = #{record.deleted,jdbcType=TINYINT},
      complaint_id = #{record.complaintId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.scau.tss.entity.File" >
    update files
    <set >
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="times != null" >
        times = #{times,jdbcType=DATE},
      </if>
      <if test="filesType != null" >
        files_type = #{filesType,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=TINYINT},
      </if>
      <if test="complaintId != null" >
        complaint_id = #{complaintId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.scau.tss.entity.File" >
    update files
    set url = #{url,jdbcType=VARCHAR},
      times = #{times,jdbcType=DATE},
      files_type = #{filesType,jdbcType=VARCHAR},
      deleted = #{deleted,jdbcType=TINYINT},
      complaint_id = #{complaintId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>