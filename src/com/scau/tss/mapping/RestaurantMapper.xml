<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.scau.tss.dao.RestaurantMapper" >
  <resultMap id="BaseResultMap" type="com.scau.tss.entity.Restaurant" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="kind" property="kind" jdbcType="VARCHAR" />
    <result column="perPerson" property="perperson" jdbcType="DECIMAL" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="scenery_id" property="sceneryId" jdbcType="INTEGER" />
    <result column="deleted" property="deleted" jdbcType="TINYINT" />
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="district" property="district" jdbcType="VARCHAR" />
    <result column="detailed_address" property="detailedAddress" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, kind, perPerson, score, scenery_id, deleted, province, city, district, 
    detailed_address
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.scau.tss.entity.RestaurantExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from restaurant
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from restaurant
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from restaurant
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.scau.tss.entity.RestaurantExample" >
    delete from restaurant
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.scau.tss.entity.Restaurant" >
    insert into restaurant (id, name, kind, 
      perPerson, score, scenery_id, 
      deleted, province, city, 
      district, detailed_address)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{kind,jdbcType=VARCHAR}, 
      #{perperson,jdbcType=DECIMAL}, #{score,jdbcType=INTEGER}, #{sceneryId,jdbcType=INTEGER}, 
      #{deleted,jdbcType=TINYINT}, #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{district,jdbcType=VARCHAR}, #{detailedAddress,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.scau.tss.entity.Restaurant" >
    insert into restaurant
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="kind != null" >
        kind,
      </if>
      <if test="perperson != null" >
        perPerson,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="sceneryId != null" >
        scenery_id,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
      <if test="province != null" >
        province,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="district != null" >
        district,
      </if>
      <if test="detailedAddress != null" >
        detailed_address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="kind != null" >
        #{kind,jdbcType=VARCHAR},
      </if>
      <if test="perperson != null" >
        #{perperson,jdbcType=DECIMAL},
      </if>
      <if test="score != null" >
        #{score,jdbcType=INTEGER},
      </if>
      <if test="sceneryId != null" >
        #{sceneryId,jdbcType=INTEGER},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=TINYINT},
      </if>
      <if test="province != null" >
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="district != null" >
        #{district,jdbcType=VARCHAR},
      </if>
      <if test="detailedAddress != null" >
        #{detailedAddress,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.scau.tss.entity.RestaurantExample" resultType="java.lang.Integer" >
    select count(*) from restaurant
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update restaurant
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.kind != null" >
        kind = #{record.kind,jdbcType=VARCHAR},
      </if>
      <if test="record.perperson != null" >
        perPerson = #{record.perperson,jdbcType=DECIMAL},
      </if>
      <if test="record.score != null" >
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.sceneryId != null" >
        scenery_id = #{record.sceneryId,jdbcType=INTEGER},
      </if>
      <if test="record.deleted != null" >
        deleted = #{record.deleted,jdbcType=TINYINT},
      </if>
      <if test="record.province != null" >
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null" >
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.district != null" >
        district = #{record.district,jdbcType=VARCHAR},
      </if>
      <if test="record.detailedAddress != null" >
        detailed_address = #{record.detailedAddress,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update restaurant
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      kind = #{record.kind,jdbcType=VARCHAR},
      perPerson = #{record.perperson,jdbcType=DECIMAL},
      score = #{record.score,jdbcType=INTEGER},
      scenery_id = #{record.sceneryId,jdbcType=INTEGER},
      deleted = #{record.deleted,jdbcType=TINYINT},
      province = #{record.province,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      district = #{record.district,jdbcType=VARCHAR},
      detailed_address = #{record.detailedAddress,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.scau.tss.entity.Restaurant" >
    update restaurant
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="kind != null" >
        kind = #{kind,jdbcType=VARCHAR},
      </if>
      <if test="perperson != null" >
        perPerson = #{perperson,jdbcType=DECIMAL},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="sceneryId != null" >
        scenery_id = #{sceneryId,jdbcType=INTEGER},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=TINYINT},
      </if>
      <if test="province != null" >
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="district != null" >
        district = #{district,jdbcType=VARCHAR},
      </if>
      <if test="detailedAddress != null" >
        detailed_address = #{detailedAddress,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.scau.tss.entity.Restaurant" >
    update restaurant
    set name = #{name,jdbcType=VARCHAR},
      kind = #{kind,jdbcType=VARCHAR},
      perPerson = #{perperson,jdbcType=DECIMAL},
      score = #{score,jdbcType=INTEGER},
      scenery_id = #{sceneryId,jdbcType=INTEGER},
      deleted = #{deleted,jdbcType=TINYINT},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      district = #{district,jdbcType=VARCHAR},
      detailed_address = #{detailedAddress,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>